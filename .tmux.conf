# Make it use C-a, similar to screen..
unbind C-b
set -g prefix C-a

#bind-key tab last-window
#bind-key L switch-client -l
bind-key C-a last-window

# Unbind: goto last window
# Bind without prefix: Clear history and screen
unbind C-l
bind-key -n C-l send-keys -R \; clear-history \; send-keys 

# Need to send ^a to the terminal? No worries, I got your back.
bind a send-prefix

# Split using visually similar shapes
unbind %
unbind '"'
bind | split-window -h
bind - split-window -v
bind _ split-window -v

# Move around panes/windows in a vi-like way
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R

# Detach safety dance
bind C-d detach
#bind -n C-d detach

# Editing-mode bindings
bind Escape copy-mode
# unbind p
# bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'C-v' rectangle-toggle
bind -t vi-copy 'y' copy-selection

# Paste a buffer into all panes in the window
bind-key f2 choose-buffer "run-shell \"tmux paste-buffer -b '%1' -t .0 && tmux paste-buffer -b '%1' -t .1 && tmux paste-buffer -b '%1' -t .2 && tmux paste-buffer -b '%1' -t .3 && tmux paste-buffer -b '%1' -t .4 && tmux paste-buffer -b '%1' -t .5 && tmux paste-buffer -b '%1' -t .6 && tmux paste-buffer -b '%1' -t .7\""

# Maximize current pane
bind-key f3 swap-pane -s : -t 0 \; select-layout main-vertical \; select-pane -t 0 \; setw main-pane-width 300

# Load encrypted buffers
#bind-key f3 command-prompt -p "Buffers file to load:,Password:" -I "~/.tmux/passwords.secret" "run-shell '(cat %1 | openssl enc -d -cast5-ofb -pass pass:%2 | zsh)'"

## screen-like hardcopy and logging
bind-key f4 pipe-pane -o 'cat >>~/output.#I-#P'
bind-key f5 capture-pane \; save-buffer -b 0 ~/tmux.hardcopy \; delete-buffer -b 0

## Delete chosen buffer
bind D choose-buffer "delete-buffer -b '%%' \; display 'Deleted!'"

setw -g mode-mouse on
setw -g mouse-resize-pane on
set -g mouse-select-pane on

# Makes quick keystrokes work.
set -s escape-time 0

# up-down fast shouldn't be stupid
#set -s repeat-time 0
set -g -s repeat-time 0

# start window indexing at zero instead of one
set -g base-index 0

# Windows are only as small as the smallest VIEWING the window (not the smallest actually connected to the session)
setw -g aggressive-resize on

# disable wm window titles
set -g set-titles off

# Pane

# Reload key
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Lock session after 4000 seconds
set-option -g lock-after-time 4000
set-option -g lock-command vlock
set-option -g lock-server on

set -g default-terminal "screen-256color"
set -g history-limit 50000

# Maximum number of paste buffers
set -g buffer-limit 20

# GNU screen's rename command is too ingrained
bind A command-prompt "rename-window '%%'"
bind R command-prompt -p "Rename session to:" "rename-session '%%'"

bind X confirm-before -p "kill-session #S? (y/n)" kill-session

# Move and (J)oin and (P)ush panes/windows around
bind-key J command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key P command-prompt -p "send pane to:"  "join-pane -t '%%'"
bind-key < join-pane -t :-1
bind-key > join-pane -t :+1

## Go to alert window
bind-key C-o next-window -a

setw -g mode-keys vi
setw -g status-keys vi
setw -g utf8 on

# THEME
#set -g status-bg colour016
set -g status-bg colour234
set -g status-fg colour166
set -g status-interval 60
set -g status-left-length 80
set -g status-left '#[fg=yellow]★ #S ★  #(~/.tmux_colors.sh)'
set -g status-right-length 90
set -g status-right '#[fg=white]#($HOME/.tmux_ips.sh) #[fg=green]#(whoami)@#H #[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=blue]%l:%M#[default]'
setw -g window-status-current-bg colour232
setw -g window-status-current-fg colour196
setw -g window-status-attr dim
setw -g window-status-current-attr bright
set -g status-justify centre
set -g pane-active-border-fg green
set -g pane-active-border-bg colour232
set -g pane-border-fg colour234
#set -g pane-border-bg colour232
set -g status-utf8 on

set -g display-panes-time 900
set -g display-panes-colour colour234
#set -g display-panes-active-colour colour196

# CLIPBOARD selection integration
bind C-c run -b "timeout 10 $(tmux show-buffer | xclip -d :0 -i -selection clipboard)"
#TODO: run this instead if we're on a remote computer.  Assumes reverse
#forwarding and that you've copied remote public key to authorized_keys locally.
#bind C-c run -b "timeout 10 $(ssh 127.0.0.1 -p 6060 tmux show-buffer \| xclip -d :0 -i -selection clipboard)"

#For macs: bind C-c run "tmux show-buffer | pbcopy"
#bind C-v run -b "tmux set-buffer \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"
set set-clipboard off

# Synchronize input to all panes in a window for parallel input (toggle)
bind C-s set-window-option synchronize-panes

# screen monitor for activity
bind M setw monitor-activity
bind S command-prompt -p "monitor for silence for how many seconds: "  "setw monitor-silence %%"
bind C command-prompt -p "monitor for content string:"  "setw monitor-content %%"
set -g visual-activity on
set -g visual-bell off
set -g visual-content on
set -g visual-silence on

## Auto-rename is annoying
setw -g automatic-rename off

set-option -g default-shell $SHELL

## 1.7+ optionsl
set -g c0-change-trigger 100
set -g c0-change-interval 2000
set -g c0-change-interval 500

## Powerline if we have it!
if-shell "[ -e $HOME/.dotify/powerline/powerline/bindings/tmux/powerline.conf ]" "source '$HOME/.dotify/powerline/powerline/bindings/tmux/powerline.conf'"
